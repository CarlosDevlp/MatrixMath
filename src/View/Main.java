/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.TaskController;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlos
 */
public class Main extends javax.swing.JFrame {
    //mis atributos
    TaskController task=new TaskController();
    //mis funciones
     //inicial
    public void init(){
     //inicializar tablas        
        
        
        clearTable(this.tbMatrixVariable);
        clearTable(this.tbMatrixResult);
        
        this.txtRecommender.append("*Bienvenidos a Matrix Math***!!!\nAgrege una matriz y comencemos...");
     //inicializar combo Box        
        for(String str : this.task.getMatrixFunctionsList())
            this.cmbMatrixFunction.addItem(str);
        
     DefaultListModel model  = new DefaultListModel(); 
              
     this.lstMatrix.setModel(model);
    }
    //limpiar tabla    
    public void clearTable(JTable table){
        String [][]temp=new String[4][4];
        DefaultTableModel model = new DefaultTableModel(temp,new String[]{"X1","X2","X3","X4"});
        table.setModel(model);
    }
    //obtener los datos de la tabla
    public Object[][] getTableData (JTable table) {
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        int nRow = dtm.getRowCount(), nCol = dtm.getColumnCount();
        Object[][] tableData = new Object[nRow][nCol];
        for (int i = 0 ; i < nRow ; i++)
            for (int j = 0 ; j < nCol ; j++)
                tableData[i][j] = dtm.getValueAt(i,j);
        return tableData;
    }
    //crear tabla
    public DefaultTableModel createTable (Object[][] values) {
        DefaultTableModel model = new DefaultTableModel(values,new String[]{"X1","X2","X3","X4"}) ;
        return model;
    }
    //
    public Main() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tbMatrixVariable1 = new javax.swing.JTable();
        pnl = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMatrixVariable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbMatrixResult = new javax.swing.JTable();
        lblTableResult = new javax.swing.JLabel();
        lblTableVariable = new javax.swing.JLabel();
        btnAddMatrix = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        lstMatrix = new javax.swing.JList();
        lblTableVariable1 = new javax.swing.JLabel();
        txtMatrixVariableName = new javax.swing.JTextField();
        btnCalcular = new javax.swing.JButton();
        cmbMatrixFunction = new javax.swing.JComboBox();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtRecommender = new javax.swing.JTextArea();
        btnDeleteMatrix = new javax.swing.JButton();
        btnDeleteAll = new javax.swing.JButton();

        tbMatrixVariable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbMatrixVariable1.setRowHeight(25);
        jScrollPane2.setViewportView(tbMatrixVariable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MatrixMath");
        setResizable(false);

        pnl.setBackground(new java.awt.Color(255, 255, 255));

        tbMatrixVariable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbMatrixVariable.setRowHeight(25);
        jScrollPane1.setViewportView(tbMatrixVariable);

        tbMatrixResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbMatrixResult.setRowHeight(25);
        jScrollPane4.setViewportView(tbMatrixResult);

        lblTableResult.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        lblTableResult.setText("Matriz de Resultados:");

        lblTableVariable.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        lblTableVariable.setText("Lista de Matrices:");

        btnAddMatrix.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        btnAddMatrix.setText("Agregar Matriz");
        btnAddMatrix.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMatrixMouseClicked(evt);
            }
        });

        lstMatrix.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstMatrixMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(lstMatrix);

        lblTableVariable1.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        lblTableVariable1.setText("Nueva Matriz:");

        btnCalcular.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        btnCalcular.setText("Calcular");
        btnCalcular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCalcularMouseClicked(evt);
            }
        });

        cmbMatrixFunction.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMatrixFunctionItemStateChanged(evt);
            }
        });

        txtRecommender.setColumns(20);
        txtRecommender.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        txtRecommender.setForeground(new java.awt.Color(0, 51, 255));
        txtRecommender.setRows(5);
        txtRecommender.setEnabled(false);
        jScrollPane6.setViewportView(txtRecommender);

        btnDeleteMatrix.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        btnDeleteMatrix.setText("Eliminar Matriz");
        btnDeleteMatrix.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMatrixMouseClicked(evt);
            }
        });

        btnDeleteAll.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        btnDeleteAll.setText("Eliminar Todo");
        btnDeleteAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteAllMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlLayout = new javax.swing.GroupLayout(pnl);
        pnl.setLayout(pnlLayout);
        pnlLayout.setHorizontalGroup(
            pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlLayout.createSequentialGroup()
                                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTableResult, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(lblTableVariable1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMatrixVariableName, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnAddMatrix)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblTableVariable, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                .addComponent(btnCalcular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbMatrixFunction, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnDeleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnDeleteMatrix, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(285, 285, 285))))
        );
        pnlLayout.setVerticalGroup(
            pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLayout.createSequentialGroup()
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTableVariable, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTableVariable1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtMatrixVariableName, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnAddMatrix, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addGap(18, 18, 18)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteMatrix)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteAll)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTableResult, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addComponent(cmbMatrixFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //eliminar matriz seleccionada de la lista de matrices
    private void btnDeleteAllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteAllMouseClicked
        
            task.removeAllMatrixList();            
            DefaultListModel model = (DefaultListModel) this.lstMatrix.getModel();
            model.removeAllElements();
            this.lstMatrix.setModel(model);
            this.txtRecommender.setText("La lista de matrices está vacía");

    }//GEN-LAST:event_btnDeleteAllMouseClicked
    //eliminar matriz seleccionada
    private void btnDeleteMatrixMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMatrixMouseClicked
        if (this.lstMatrix.getSelectedIndex() != -1){
            
            task.removeMatrixAt(this.lstMatrix.getSelectedIndex());            
            DefaultListModel model = (DefaultListModel) this.lstMatrix.getModel();
            model.remove(this.lstMatrix.getSelectedIndex());
            this.lstMatrix.setModel(model);
            
        }else
            this.txtRecommender.setText("Seleccione una matriz antes de eliminar");
    }//GEN-LAST:event_btnDeleteMatrixMouseClicked

   //Escribir recomendaciones acerca del la operación escogida
    private void cmbMatrixFunctionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMatrixFunctionItemStateChanged
        this.txtRecommender.setText(" "+task.getMatrixFunctionSuggestion(this.cmbMatrixFunction.getSelectedIndex()));
    }//GEN-LAST:event_cmbMatrixFunctionItemStateChanged

    private void btnCalcularMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCalcularMouseClicked
        
        try{
              
              
              DefaultTableModel model=new DefaultTableModel(
                      task.doTask(this.cmbMatrixFunction.getSelectedIndex())
                      ,new String[]{"X1","X2","X3","X4"});
              this.tbMatrixResult.setModel(model);
          }
          catch(Exception err){
              JOptionPane.showMessageDialog(null, err,"Error",JOptionPane.ERROR_MESSAGE);
          }
        
    }//GEN-LAST:event_btnCalcularMouseClicked
                    
    private void btnAddMatrixMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMatrixMouseClicked
        try{
            task.addMatrix(this.txtMatrixVariableName.getText(), this.tbMatrixVariable.getModel());
             DefaultListModel model  = (DefaultListModel) this.lstMatrix.getModel(); 
              model.addElement(this.txtMatrixVariableName.getText());
              this.lstMatrix.setModel(model);
            this.txtRecommender.setText("Se ha agregado la matriz: "+this.txtMatrixVariableName.getText());
        }catch(Exception err){
            JOptionPane.showMessageDialog(null, err,"Error",JOptionPane.ERROR_MESSAGE);
        } 
    }//GEN-LAST:event_btnAddMatrixMouseClicked

    private void lstMatrixMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstMatrixMouseClicked
        if(this.lstMatrix.getSelectedIndex()!=-1)
            this.tbMatrixVariable.setModel(
                                         new DefaultTableModel(
                                                task.arrayToTable(task.getMatrixAt(this.lstMatrix.getSelectedIndex()).getValues()), 
                                                new String[]{"X1","X2","X3","X4"})
                                          );
    }//GEN-LAST:event_lstMatrixMouseClicked

   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMatrix;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnDeleteAll;
    private javax.swing.JButton btnDeleteMatrix;
    private javax.swing.JComboBox cmbMatrixFunction;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblTableResult;
    private javax.swing.JLabel lblTableVariable;
    private javax.swing.JLabel lblTableVariable1;
    private javax.swing.JList lstMatrix;
    private javax.swing.JPanel pnl;
    private javax.swing.JTable tbMatrixResult;
    private javax.swing.JTable tbMatrixVariable;
    private javax.swing.JTable tbMatrixVariable1;
    private javax.swing.JTextField txtMatrixVariableName;
    private javax.swing.JTextArea txtRecommender;
    // End of variables declaration//GEN-END:variables
}
